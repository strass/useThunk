{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { useReducer, Reducer, ReducerState, ReducerAction } from \"react\";\n\ninterface ThunkDispatch<TState, TBasicAction extends ReducerAction<any>> {\n  <TReturnType>(\n    thunkAction: ThunkAction<TReturnType, TState, TBasicAction>\n  ): TReturnType;\n  <A extends TBasicAction>(action: A): A;\n}\n\nexport type ThunkAction<\n  TReturnType,\n  TState,\n  TBasicAction extends ReducerAction<any>\n> = (\n  dispatch: ThunkDispatch<TState, TBasicAction>,\n  getState: () => TState\n) => TReturnType;\n\nfunction useThunk<R extends Reducer<any, any>, I>(\n  reducer: R,\n  initializerArg: I & ReducerState<R>,\n  initializer: (arg: I & ReducerState<R>) => ReducerState<R>\n): [ReducerState<R>, ThunkDispatch<ReducerState<R>, ReducerAction<R>>];\nfunction useThunk<R extends Reducer<any, any>, I>(\n  reducer: R,\n  initializerArg: I,\n  initializer: (arg: I) => ReducerState<R>\n): [ReducerState<R>, ThunkDispatch<ReducerState<R>, ReducerAction<R>>];\nfunction useThunk<R extends Reducer<any, any>>(\n  reducer: R,\n  initialState: ReducerState<R>,\n  initializer?: undefined\n): [ReducerState<R>, ThunkDispatch<ReducerState<R>, ReducerAction<R>>];\n\nfunction useThunk<R extends Reducer<any, any>, I>(\n  reducer: R,\n  initializerArg: I & ReducerState<R> | I | ReducerState<R>,\n  initializer?:\n    | ((arg: I & ReducerState<R>) => ReducerState<R>)\n    | ((arg: I) => ReducerState<R>)\n    | undefined\n) {\n  const [state, dispatch] = useReducer(\n    reducer,\n    // @ts-ignore\n    initializerArg,\n    initializer\n  );\n  const thunkDispatch = (\n    action:\n      | ReducerAction<R>\n      | ThunkAction<any, ReducerState<R>, ReducerAction<R>>\n  ) => {\n    if (typeof action === \"function\") {\n      return (action as ThunkAction<any, ReducerState<R>, ReducerAction<R>>)(\n        dispatch,\n        () => state\n      );\n    }\n    dispatch(action);\n    return undefined;\n  };\n  return [state, thunkDispatch] as [typeof state, typeof thunkDispatch];\n}\n\nexport default useThunk;\n"],"names":["reducer","initializerArg","initializer","useReducer","state","action","dispatch"],"mappings":"sCAkCA,SACEA,EACAC,EACAC,SAK0BC,aACxBH,EAEAC,EACAC,uBAgBK,CAACE,WAbNC,MAIsB,mBAAXA,SACDA,EACNC,oBACMF,IAGVE,EAASD"}